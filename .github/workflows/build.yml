name: CI Pipeline

on:
  push:
    branches:
      - main
      - develop
      - 'release/*'
      - feature/git-actions
  pull_request:
    branches:
      - main
      - develop
      - 'release/*'

env:
  GITGUARDIAN_API_KEY: ${{ secrets.GITGUARDIAN_API_KEY }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
        persist-credentials: true

    - name: Get Revision
      run: echo "REVISION=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

    - name: Generate image tags
      run: |
        VERSION_TAG=$(git describe --abbrev=0 --tags)
        IMAGE_TAGS="${VERSION_TAG}.$(date '+%Y.%m.%d').${REVISION}"
        if [ "${{ github.ref }}" == "refs/heads/main" ]; then IMAGE_TAGS="$VERSION_TAG,latest"; fi
        echo "IMAGE_TAGS=$IMAGE_TAGS" >> $GITHUB_ENV

    - name: GitGuardian Scan
      run: |
        docker run \
          -v $PWD:/data \
          -e GITGUARDIAN_API_KEY \
          gitguardian/ggshield:latest ggshield secret scan ci
      if: ${{ always() }}

    - name: Run MegaLinter
      run: |
        if [ "${{ github.event_name }}" == "pull_request" ]; then
          VALIDATE_ALL_CODEBASE=false
          GITHUB_SHA=$(git log -1 --pretty=%B | sed -e 's/^Merge //' -e 's/ into.*//')
        else
          VALIDATE_ALL_CODEBASE=true
          GITHUB_SHA=${{ github.sha }}
        fi
        docker run -v "$GITHUB_WORKSPACE:/tmp/lint" \
          -e GITHUB_TOKEN \
          -e VALIDATE_ALL_CODEBASE \
          -e APPLY_FIXES=none \
          -e GITHUB_STATUS_REPORTER=true \
          -e GITHUB_COMMENT_REPORTER=true \
          -e CI=true \
          -e GITHUB_REF=${{ github.ref }} \
          -e GITHUB_REPOSITORY=${{ github.repository }} \
          -e GITHUB_SHA \
          oxsecurity/megalinter-java:v7

    - name: Login to Azure registry
      uses: docker/login-action@v1
      with:
        registry: oaftech.azurecr.io
        username: ${{ vars.ACR_PULL_USERNAME }}
        password: ${{ secrets.ACR_PULL_PASSWORD }}

    - name: Build and push image to container registry
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: oaftech.azurecr.io/oneacrefund/airtel-connector:${{ env.IMAGE_TAGS }}

    - name: Publish configuration package
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' || startsWith(github.ref, 'refs/heads/release/')
      uses: actions/upload-artifact@v2
      with:
        name: airtel-connector
        path: ${{ github.workspace }}/path-to-your-artifacts
